	I ended up using the CoinMarketCap API which allows you to fetch quite a bit of data from the CoinMarketCap cryptocurrency exchange. I originally started out by using almost every endpoint available for the “Free/basic” plan but narrowed it  down to the endpoints I really needed. I ended up using the following endpoints: "https://pro-api.coinmarketcap.com/v1/cryptocurrency/categories", “https://pro-api.coinmarketcap.com/v1/cryptocurrency/category", "https://pro-api.coinmarketcap.com/v1/exchange/assets", "https://pro-api.coinmarketcap.com/v1/exchange/map"	

	Here’s an overview of how my OverallDegreeCentrality.rs file works (the code). In short, this code uses the two endpoints exchange/assets and exchange/map. It allows a user to set a “limit” on how many active exchanges they want to analyze. For each of those active exchanges, it iterates through them and retrieves the assets that are sold on them. Each JSON output contains a (very thorough) number of datapoints. In order to calculate degree centrality in the “easiest” way, I ended up using the “name” from the platform as the node(s) and the edges were the “connections” (or supports) between the other assets it supports on the other platforms being analyzed. 

	CategoryDegreeCentrality was an add-on because I didn’t have 150 lines of code, about 122, and it functions in a very similar manner overall to the way that OverallDegreeCentrality functions. In summary, it uses the two endpoints cryptocurrency/categories and cryptocurrency/category. The user chooses a limit for the number of categories they’d like to analyze, which the code choose randomly from the total categories on CMC, which is 215, and for each of the categories, it runs the cryptocurrency/category endpoint code to retrieve the assets sold/supported that fall into that category. It calculates degree centrality in a similar manner and uses the platform name as nodes and the connection WITHIN the same category as edges (which I wanted to change to be across categories but didn’t get  the time to do so). 

Note: I did use extensive help from GPT, Bing AI, and very minimal from Bard. I did my best to understand the outputs it gave me, and while there is still a bit of the niche parts I am unsure about, I am still learning about them as I write, and if you have any questions please let me know. Thanks for a great semester. 
